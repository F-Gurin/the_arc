# Generated by Django 3.2.16 on 2023-01-20 13:06

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('password', models.CharField(max_length=150, verbose_name='Password')),
                ('username', models.CharField(max_length=150, unique=True, verbose_name='Login')),
                ('first_name', models.CharField(max_length=150, verbose_name='First name')),
                ('last_name', models.CharField(max_length=150, verbose_name='Last name')),
                ('date_of_birth', models.DateField(default='2023-01-20')),
                ('language', models.CharField(choices=[('ENG', 'English'), ('RUS', 'Russian'), ('UKR', 'Ukrainian')], default='RUS', max_length=3)),
                ('telegram_nickname', models.CharField(max_length=50, verbose_name='Telegram nickname')),
                ('phone', models.CharField(max_length=150, verbose_name='Phone number')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('tg_id', models.IntegerField(default=0, verbose_name='Telegram ID')),
                ('is_bot', models.BooleanField(default=False)),
                ('tg_first_name', models.CharField(max_length=150, verbose_name='Telegram first name')),
                ('tg_last_name', models.CharField(max_length=150, verbose_name='Telegram last name')),
                ('tg_username', models.CharField(max_length=150, verbose_name='Telegram username')),
                ('language_code', models.CharField(choices=[('ENG', 'English'), ('RUS', 'Russian'), ('UKR', 'Ukrainian')], default='RUS', max_length=3)),
                ('can_join_groups', models.BooleanField(default=False)),
                ('can_read_all_group_messages', models.BooleanField(default=False)),
                ('supports_inline_queries', models.BooleanField(default=False)),
                ('is_premium', models.BooleanField(default=False)),
                ('added_to_attachment_menu', models.BooleanField(default=False)),
                ('last_button_pressed', models.CharField(default='rootButton', max_length=150, verbose_name='Last pressed button')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'ordering': ('username',),
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='web_admin.user')),
                ('problem_type', models.CharField(choices=[('REL', 'Relationships'), ('INT', 'Internal_state'), ('W&S', 'Work_study'), ('LIF', 'Life'), ('FND', 'Finding_yourself')], default='INT', max_length=3)),
                ('assigned_id', models.IntegerField(blank=True, null=True)),
                ('registration_time', models.DateTimeField(auto_now=True, verbose_name='Registration time')),
                ('priority', models.IntegerField(blank=True, null=True)),
                ('processed', models.BooleanField(default=False)),
                ('processed_time', models.DateTimeField(blank=True, null=True, verbose_name='Processed time')),
                ('approved_time', models.DateTimeField(blank=True, null=True, verbose_name='Approved time')),
                ('experienced', models.BooleanField(default=False)),
                ('patient_info_flag', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Patient',
                'verbose_name_plural': 'Patients',
                'ordering': ('username',),
            },
            bases=('web_admin.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Psychologist',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='web_admin.user')),
                ('added_by', models.CharField(blank=True, max_length=50, verbose_name='Added by')),
                ('tg_authorized', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Psychologist',
                'verbose_name_plural': 'Psychologists',
                'ordering': ('username',),
            },
            bases=('web_admin.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Sessions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_time', models.DateTimeField(blank=True, null=True)),
                ('session_type', models.CharField(blank=True, choices=[('IND', 'Individual'), ('GRP', 'Group'), ('WEB', 'Webinar')], default='IND', max_length=3, null=True)),
                ('language', models.CharField(choices=[('ENG', 'English'), ('RUS', 'Russian'), ('UKR', 'Ukrainian')], default='RUS', max_length=3)),
                ('patient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='session', to='web_admin.patient', verbose_name='patient')),
                ('psychologists', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web_admin.psychologist', verbose_name='psychologist')),
            ],
            options={
                'verbose_name': 'Session',
                'verbose_name_plural': 'Sessions',
            },
        ),
        migrations.AddField(
            model_name='psychologist',
            name='time_table_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='psychologist', to='web_admin.sessions', verbose_name='time_table_id'),
        ),
    ]
